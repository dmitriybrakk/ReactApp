'use strict';

var SimpleEmiter = function() {
    if (!(this instanceof SimpleEmiter))
        throw "this function must be called with the new operator";
    this.init();
}

SimpleEmiter.prototype.init = function(){
    this.events = {};
    this._id = 0;
}


SimpleEmiter.prototype.on = function(eventName,callback){
    var self = this;
    callback._id = typeof callback._id == "undefined" ? this._id++ : callback._id;

    eventName.replace(/\S+/g, function(name){
        (self.events[eventName] = self.events[eventName] || [] ).push(callback);
    });
}

SimpleEmiter.prototype.off = function(eventName,callback){
    var self = this;
    if(eventName=='*') this.events = {};
    else {
        eventName.replace(/\S+/g, function(name){
            if(callback){
                var ev = self.events[name];
                for (var i=0, cb; (cb = ev && ev[i]); ++i){
                    if(cb._id == callback._id){
                        ev.splice(i,1);
                        i--;
                    }
                }
            }else{
                self.events[name] = {};
            }
        });
    }

}

SimpleEmiter.prototype.emit = function(eventName){

    var args = [].slice.call(arguments,1),
        callbacks = this.events[eventName] || [];

    for (var i=0, cb; (cb = callbacks[i]); ++i){
        if(!cb.busy){
            cb.busy = 1;

            cb.apply(null,args);
            if(callbacks[i]!== cb){
                i--;
            }

            cb.busy = 0;
        }
    }

}


module.exports = SimpleEmiter;
